# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt

    # Install PAUP* on Ubuntu
    - name: Install PAUP on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran libgfortran5
        wget https://phylosolutions.com/paup-test/paup4a169_ubuntu64.gz -O /tmp/paup4a169_ubuntu64.gz
        gunzip /tmp/paup4a169_ubuntu64.gz
        chmod a+x /tmp/paup4a169_ubuntu64
        sudo mv /tmp/paup4a169_ubuntu64 /usr/local/bin/paup

    # Install PAUP* on macOS
    - name: Install PAUP on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install gfortran
        wget https://phylosolutions.com/paup-test/paup4a168_osx.gz -O /tmp/paup.gz
        gunzip /tmp/paup.gz
        chmod a+x /tmp/paup
        sudo mv /tmp/paup /usr/local/bin/paup

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Pytest
    - name: Test PAUP-dependent code
      if: runner.os != 'Windows'
      run: pytest test_agatta_PAUP.py
      
    - name: Test with pytest
      run: |
        pytest
